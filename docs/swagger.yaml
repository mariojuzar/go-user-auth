definitions:
  request.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  request.RefreshTokenRequest:
    properties:
      refresh_token:
        type: string
    type: object
  request.UserCreateRequest:
    properties:
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      role:
        type: string
      username:
        type: string
    type: object
  request.UserUpdateRequest:
    properties:
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      role:
        type: string
      user_id:
        type: string
      username:
        type: string
    type: object
  response.AuthResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  response.BaseResponse:
    properties:
      data: {}
      error:
        type: string
      message:
        type: string
    type: object
  response.UserResponse:
    properties:
      first_name:
        type: string
      last_name:
        type: string
      role:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
  description: User Auth API
  title: User Auth API
  version: 1.0.0
paths:
  /v1/auth/login:
    post:
      consumes:
      - application/json
      description: LoginUser
      parameters:
      - description: login user payload
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/request.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  $ref: '#/definitions/response.AuthResponse'
              type: object
      summary: LoginUser
      tags:
      - auth
  /v1/auth/refresh:
    post:
      consumes:
      - application/json
      description: RefreshToken
      parameters:
      - description: refresh token payload
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/request.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  $ref: '#/definitions/response.AuthResponse'
              type: object
      summary: RefreshToken
      tags:
      - auth
  /v1/users:
    get:
      consumes:
      - application/json
      description: FindAllUser
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: size result
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.UserResponse'
                  type: array
              type: object
      security:
      - ApiKeyAuth: []
      summary: FindAllUser
      tags:
      - users
    patch:
      consumes:
      - application/json
      description: UpdateUser
      parameters:
      - description: update user payload
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/request.UserUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BaseResponse'
      security:
      - ApiKeyAuth: []
      summary: UpdateUser
      tags:
      - users
    post:
      consumes:
      - application/json
      description: CreateUser
      parameters:
      - description: create user payload
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/request.UserCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BaseResponse'
      security:
      - ApiKeyAuth: []
      summary: CreateUser
      tags:
      - users
  /v1/users/:user_id:
    delete:
      consumes:
      - application/json
      description: DeleteUser
      parameters:
      - description: user id
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BaseResponse'
      security:
      - ApiKeyAuth: []
      summary: DeleteUser
      tags:
      - users
  /v1/users/me:
    get:
      consumes:
      - application/json
      description: FindMyUser
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  $ref: '#/definitions/response.UserResponse'
              type: object
      security:
      - ApiKeyAuth: []
      summary: FindMyUser
      tags:
      - users
  /v1/users/user/:user_id:
    get:
      consumes:
      - application/json
      description: FindUserById
      parameters:
      - description: user id
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.BaseResponse'
            - properties:
                data:
                  $ref: '#/definitions/response.UserResponse'
              type: object
      security:
      - ApiKeyAuth: []
      summary: FindUserById
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
